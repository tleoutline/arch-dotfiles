#!/usr/bin/env zsh

# Function to initialize a new project
() {
    local lang=$1
    local name=$2

    if [ -z "$lang" ]; then
        echo "Please specify a language (e.g., python, C, C++)."
        return 1
    fi

    if [ -z "$name" ]; then
        name="."
    fi

    case $lang in
        python)
            init_python_project "$name"
            ;;
        # Add more languages here
        *)
            echo "Language '$lang' is not supported yet."
            return 1
            ;;
    esac
}

# Placeholder function for initializing a Python project
init_python_project() {
    local project_name=$1

    # Clone the template repository
    git clone https://github.com/tleoutline/pyproject_template.git "$project_name"

    # Change directory to the project directory
    z "$project_name" || exit

    # Modify the pyproject.toml file
    sed -i '' "s/name = \"sampleproject\"/name = \"$project_name\"/" pyproject.toml

    # Remove the .git directory
    rm -rf .git

    # Ask if user wants to initialize a new git repository
    echo "Do you want to initialize a new git repository? (y/n)"
    read -r init_repo
    if [[ $init_repo == "y" ]]; then
        git init
        echo "Initialized a new git repository."
    fi

    # Ask if user wants to create a virtual environment
    echo "Do you want to create a virtual environment? (y/n)"
    read -r create_env
    if [[ $create_env == "y" ]]; then
        # Ask for the prompt name
        echo "Enter the prompt name for the virtual environment:"
        read -r prompt_name
        python3 -m venv venv --prompt "$prompt_name"
        echo "Created a virtual environment '$prompt_name'."
    fi
    
     # Ask if user wants to create an autoenv
    echo "Do you want to create an autoenv to automatically enter the virtual environment? (y/n)"
    read -r create_autoenv
    if [[ $create_autoenv == "y" ]]; then
        # Write to .env file
        echo 'VIRTUAL_ENV_DISABLE_PROMPT=1 source $(readlink -f "$0" | xargs dirname)/venv/bin/activate' > .env
        # Write to .env.leave file
        echo 'deactivate' > .env.leave
        echo "Autoenv setup created."
    fi

    # Change back to the original directory
    z - || exit
}
